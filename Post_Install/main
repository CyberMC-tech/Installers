#!/usr/bin/env python3

import time
import os
import subprocess
from tqdm import tqdm


GPG_SAVE = "/usr/share/keyrings/brave-browser-archive-keyring.gpg"
GPG_URL = "https://brave-browser-apt-release.s3.brave.com/brave-browser-archive-keyring.gpg"
REPO = "deb [signed-by=/usr/share/keyrings/brave-browser-archive-keyring.gpg] https://brave-browser-apt-release.s3.brave.com/ stable main"
FILE = "/etc/apt/sources.list.d/brave-browser-release.list"
APPEND = """
  # fnm
  export PATH="$HOME/.local/share/fnm:$PATH"
  eval "`fnm env`"
"""

TLDR = ["sudo nala install tldr -y"]
GEDIT = ["sudo nala install gedit -y"]
CODE = ["sudo nala install code -y"]
W3M = ["sudo nala install w3m -y"]
RANGER = ["sudo nala install ranger -y"]
FZF = ["sudo nala install fzf -y"]
NEOVIM = ["sudo nala install neovim -y"]
UNZIP = ["sudo nala install unzip -y"]
WGET = ["sudo nala install wget -y"]
GIT = ["sudo nala install git -y"]
CURL = ["sudo nala install curl -y"]
DOCKER = ["sudo nala install docker.io -y"]
DOCKER_COMPOSE = ["sudo nala install docker-compose -y"]
CHEAT = [
        "wget https://github.com/cheat/cheat/releases/download/4.4.0/cheat-linux-amd64.gz",
        "unzip cheat-linux-amd64.gz",
        "sudo chmod +x cheat-linux-amd64",
        "sudo mv cheat-linux-amd64 /usr/local/bin/cheat",
        "sudo rm -rf ./cheat-linux-amd64.gz"
]

BRAVE = [
        "sudo apt install -y curl",
        f"sudo curl -fsSLo {GPG_SAVE} {GPG_URL}",
        f"sudo echo {REPO} | sudo tee {FILE}",
        "sudo apt update -y",
        "sudo apt install -y brave-browser"
]


FNM = [
        "curl -fsSL https://fnm.vercel.app/install | bash",
        f"sudo echo {APPEND} >> ~/.bashrc",
        "source ~/.bashrc"
]

MINICONDA = [
        "mkdir -p ~/miniconda3",
        "wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda3/miniconda.sh",
        "bash ~/miniconda3/miniconda.sh -b -u -p ~/miniconda3",
        "rm -rf ~/miniconda3/miniconda.sh",
        "~/miniconda3/bin/conda init bash",
        "~/miniconda3/bin/conda init zsh"
]

NERD_FONT = [
        "sudo mkdir -p /usr/share/fonts/truetype/VictorMono"
        "wget -q https://github.com/ryanoasis/nerd-fonts/releases/download/v3.0.2/VictorMono.zip -O /tmp/VictorMono"
        "sudo unzip /tmp/VictorMono -d /usr/share/fonts/truetype/VictorMono"
        "sudo rm -rf /tmp/VictorMono"
]

PROGRAMS = [TLDR, GEDIT, CODE, W3M, RANGER, FZF, NEOVIM, UNZIP, WGET, GIT, CURL, DOCKER, DOCKER_COMPOSE, CHEAT, BRAVE, FNM, NERD_FONT, MINICONDA]


def SPR(command):
    subprocess.run(command, shell=True, stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL) 


os.system("clear")
for i in tqdm(PROGRAMS, colour="magenta", desc="Total: "):
    for t in tqdm(i, colour="cyan"):
        SPR(t)
        time.sleep(.5)

